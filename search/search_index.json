{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>mdocfile is Python package for working with  SerialEM  mdoc files.</p>"},{"location":"#quickstart","title":"Quickstart","text":"<p><code>mdocfile.read()</code> will return the contents of an mdoc file as a pandas  dataframe.</p> <pre><code>import mdocfile\n\ndf = mdocfile.read('my_mdoc_file.mdoc')\n</code></pre> <p>For writing valid mdoc files, please see writing mdoc files.</p>"},{"location":"#installation","title":"Installation","text":"<p>pip:</p> <pre><code>pip install mdocfile\n</code></pre>"},{"location":"#parsing-from-text","title":"Parsing from text","text":"<p><code>Mdoc.from_string().as_dataframe()</code> will return the contents of string mdoc data as a pandas dataframe.  This is useful for mdoc data that is not stored in a file (e.g. from a database or a web request). </p> <pre><code>from mdocfile.data_models import Mdoc\n\nmdoc_data = ...\n\nmdoc = Mdoc.from_string(mdoc_data).as_dataframe()\n</code></pre>"},{"location":"writing/","title":"Writing mdoc files","text":"<p>This page will explain how to write valid SerialEM mdoc files in Python  using mdocfile.</p>"},{"location":"writing/#the-problem-with-dataframes","title":"The problem with dataframes","text":"<p>mdocfile returns a single pandas dataframe when reading files. This tabular representation  is convenient for data exploration and analysis. Some global data is replicated across  all sections to enable returning this simple dataframe but this makes the dataframe a bad  model for the contents of a file.</p>"},{"location":"writing/#introduction-to-data-models","title":"Introduction to data models","text":"<p>The contents of a file are represented as a small set of  pydantic models internally.  These are simple classes containing data that provide guarantees about the types of those  data based on type hints.</p> <ul> <li>Mdoc - the whole file</li> <li>MdocGlobalData - global data applying to all sections</li> <li>MdocSectionData - data pertaining to each section</li> </ul> <p>These models can be explicitly constructed and used to write an mdoc file.</p>"},{"location":"writing/#writing-an-mdoc-file","title":"Writing an mdoc file","text":"<p>In this section, we will write a simple mdoc file with data for two sections.</p> <p>The attribute names for each model reflect those found in the  SerialEM documentation. The expected types can be seen by inspecting the model definitions in  data_models.py.</p> <pre><code>from pathlib import Path\nfrom mdocfile.data_models import Mdoc, MdocGlobalData, MdocSectionData\n\n# construct global data model\nglobal_data = MdocGlobalData(\n    DataMode=1,\n    ImageSize=(3838, 3710),\n    PixelSpacing=1.35,\n    Voltage=300\n)\n\n# construct section data models\nfirst_section = MdocSectionData(\n    ZValue=0,\n    TiltAngle=0,\n    StagePosition=(0.25, -0.25),\n    PriorRecordDose=0,\n    ExposureDose=0.3,\n    SubFramePath=Path('/images/first_image.tif'),\n    DateTime='05-Nov-15  15:21:38',\n    NumSubFrames=8,\n)\n\nsecond_section = MdocSectionData(\n    ZValue=1,\n    TiltAngle=3,\n    StagePosition=(0.25, -0.25),\n    PriorRecordDose=0.3,\n    ExposureDose=0.3,\n    SubFramePath=Path('/images/second_image.tif'),\n    DateTime='05-Nov-15  15:22:38',\n    NumSubFrames=8,\n)\n\n# construct mdoc model\nmdoc = Mdoc(\n    titles=[\n        '[T = SerialEM: Digitized on EMBL Krios                       30-Nov-15  15:14:20    ]',\n        '[T =     Tilt axis angle = 85.3, binning = 4  spot = 8  camera = 2]'\n    ],\n    global_data=global_data,\n    section_data=[first_section, second_section]\n)\n\n# write out the file\nwith open('my_new_mdoc.mdoc', mode='w+') as file:\n    file.write(mdoc.to_string())\n</code></pre> <p>The code above produces the following file:</p> <pre><code>DataMode = 1\nImageSize = 3838 3710\nPixelSpacing = 1.35\nVoltage = 300.0\n\n[T = SerialEM: Digitized on EMBL Krios                       30-Nov-15  15:14:20    ]\n\n[T =     Tilt axis angle = 85.3, binning = 4  spot = 8  camera = 2]\n\n[ZValue = 0]\nTiltAngle = 0.0\nStagePosition = 0.25 -0.25\nExposureDose = 0.3\nPriorRecordDose = 0.0\nSubFramePath = /images/first_image.tif\nNumSubFrames = 8\nDateTime = 05-Nov-15  15:21:38\n\n[ZValue = 1]\nTiltAngle = 3.0\nStagePosition = 0.25 -0.25\nExposureDose = 0.3\nPriorRecordDose = 0.3\nSubFramePath = /images/second_image.tif\nNumSubFrames = 8\nDateTime = 05-Nov-15  15:22:38\n</code></pre>"}]}